#!/usr/bin/python

import cgi
form = cgi.FieldStorage()

import os, os.path

#<?xml version="1.0"?>
#<bustime-response>
#	<sb>
#		<nm>Example News</nm>
#		<sbj>Example News</sbj>
#		<dtl>This is an example news item, to test out custom service bulletins with the bulletin display cell on the top view controller. It will also help test out the sectioned bulletin view controller.</dtl>
#		<brf>This is an example news item, to test out custom service bulletins with the bulletin display cell on the top view controller. It will also help test out the sectioned bulletin view controller.</brf>
#		<prty>Low</prty>
#	</sb>
#</bustime-response>

bulletins = [] # each element dict, with title, body, and priority 0,1,2

def addBulletin(priority, title, body):
	global bulletins
	bulletins.append({'title':title, 'body':body, 'priority':priority})

##########

files = os.listdir('news')
#files.sort()
for fname in files:
	if fname.endswith('.skip'):
		continue
	f = open(os.path.join('news', fname), 'r')
	priority = int(f.readline().strip())
	title = f.readline().strip()
	body = cgi.escape(f.read())
	addBulletin(priority, title, body)
	f.close()

#addBulletin(0, "Test Bulletin", "This new bulletin tests out the bulletin-generation script on the web server.")

#if form.has_key("key"):
#	addBulletin(0, "Api Key", form['key'])

if form.has_key("version"):
	version = form['version'].value
	version = map(int, version.split("."))
	if len(version) < 3:
		version += [0] * (3 - len(version))

	f = open("updates/version")
	newversion = f.readline().strip()

	newversion = map(int, newversion.split("."))
	if len(newversion) < 3:
		newversion += [0] * (3 - len(newversion))

	needupdate = False
	for i in range(3):
		if newversion[i] > version[i]:
			needupdate = True
			break

	if not needupdate:
		f.close()
	else:
		title = f.readline().strip()
		body = cgi.escape(f.read())
		addBulletin(3, title, body)

if form.has_key("dbversion") and form.has_key("dbdate"):
	dbversion = str(form['dbversion'].value)
	# month, day, year (weirdo americans!)
	dbdate = map(int, form['dbdate'].value.split("/"))

	f = open("updates/databases")
	for i in f.readlines():
		i = i.strip().split(" ")
		# i is version date url
		if i[0] == dbversion:
			needsupdate = False
			date = map(int, i[1].split("/"))
			# check years
			if date[2] > dbdate[2]:
				needsupdate = True
			elif date[2] == dbdate[2] and date[0] > dbdate[0]:
				needsupdate = True
			elif date[2] == dbdate[2] and date[0] == dbdate[0] and date[1] > dbdate[1]:
				needsupdate = True
			if needsupdate:
				addBulletin(3, "!!!DBUPDATE", i[2])
	f.close()
	
	#addBulletin(0, "DB Interface Version", form['dbversion'])

##########

print "Content-type: text/xml"
print

print "<?xml version=\"1.0\"?>"
print "<bustime-response>"
for i in bulletins:
	print "\t<sb>"
	print "\t\t<nm>%s</nm>" % (i['title'],)
	print "\t\t<sbj>%s</sbj>" % (i['title'],)
	print "\t\t<dtl>%s</dtl>" % (i['body'],)
	print "\t\t<brf>%s</brf>" % (i['body'],)
	priority = "Low"
	if (i['priority'] == 1):
		priority = "Medium"
	if (i['priority'] == 2):
		priority = "High"
	print "\t\t<prty>%s</prty>" % (priority,)
	print "\t</sb>"
print "</bustime-response>"
